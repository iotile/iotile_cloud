# Generated by Django 3.2.8 on 2021-11-03 23:44

import apps.org.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orgtemplate', '0001_initial'),
        ('s3images', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Org',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Company Name')),
                ('slug', models.SlugField(max_length=60, unique=True)),
                ('about', models.TextField(blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created_on')),
                ('is_vendor', models.BooleanField(default=False)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orgs', to='s3images.s3image')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_orgs', to=settings.AUTH_USER_MODEL)),
                ('ot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orgs', to='orgtemplate.orgtemplate')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OrgMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created_on')),
                ('is_active', models.BooleanField(default=True, verbose_name='Status')),
                ('is_org_admin', models.BooleanField(default=False)),
                ('permissions', models.JSONField(blank=True, default=apps.org.models.get_default_membership_permissions, null=True)),
                ('role', models.CharField(default='m1', max_length=3)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership', to='org.org')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization member',
                'verbose_name_plural': 'Organization members',
                'ordering': ['org', 'user'],
                'unique_together': {('org', 'user')},
            },
        ),
        migrations.CreateModel(
            name='OrgDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Domain Name')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created_on')),
                ('verified', models.BooleanField(default=False)),
                ('default_role', models.CharField(default='m1', max_length=3)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='org.org')),
            ],
            options={
                'verbose_name': 'Organization domain',
                'verbose_name_plural': 'Organization domains',
                'ordering': ['org', 'name'],
            },
        ),
        migrations.AddField(
            model_name='org',
            name='users',
            field=models.ManyToManyField(blank=True, through='org.OrgMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AuthAPIKey',
            fields=[
                ('id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('prefix', models.CharField(editable=False, max_length=8, unique=True)),
                ('hashed_key', models.CharField(editable=False, max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('name', models.CharField(default=None, help_text='A free-form name for the API key. Need not be unique. 50 characters max.', max_length=50)),
                ('revoked', models.BooleanField(blank=True, default=False, help_text='If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)')),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Once API key expires, clients cannot use it anymore.', null=True, verbose_name='Expires')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='org.org')),
            ],
            options={
                'verbose_name': 'Custom M2M API key',
                'verbose_name_plural': 'Custom M2M API keys',
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
    ]
